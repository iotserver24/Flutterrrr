name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        type: string
      build_number:
        description: 'Build number (e.g., 1)'
        required: true
        type: string

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
      
      - name: Flutter doctor
        run: flutter doctor -v
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Analyze code
        run: flutter analyze
      
      - name: Build Universal APK
        run: flutter build apk --release
      
      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/xibe-chat-v${{ inputs.version }}-${{ inputs.build_number }}.apk
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/xibe-chat-v${{ inputs.version }}-${{ inputs.build_number }}.apk
          retention-days: 1

  build-windows:
    runs-on: windows-latest
    
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
      
      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop
      
      - name: Create Windows platform files
        run: flutter create --platforms=windows .
      
      - name: Flutter doctor
        run: flutter doctor -v
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Create self-signed certificate
        run: |
          $cert = New-SelfSignedCertificate -Type Custom -Subject "CN=XibeChat" -KeyUsage DigitalSignature -FriendlyName "XibeChat" -CertStoreLocation "Cert:\CurrentUser\My" -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.3", "2.5.29.19={text}")
          $pwd = ConvertTo-SecureString -String "password" -Force -AsPlainText
          $certPath = Join-Path -Path $env:TEMP -ChildPath "xibechat.pfx"
          Export-PfxCertificate -Cert "Cert:\CurrentUser\My\$($cert.Thumbprint)" -FilePath $certPath -Password $pwd
          echo "CERT_PATH=$certPath" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CERT_PASSWORD=password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell
      
      - name: Build Windows EXE
        run: flutter build windows --release
      
      - name: Build Windows MSIX
        run: |
          dart pub global activate msix
          dart pub global run msix:create --certificate-path ${{ env.CERT_PATH }} --certificate-password ${{ env.CERT_PASSWORD }} --display-name "Xibe Chat" --publisher-display-name "XibeChat" --identity-name "XibeChat.XibeChat" --version ${{ inputs.version }}.${{ inputs.build_number }}
      
      - name: Rename Windows artifacts
        run: |
          Copy-Item -Path "build\windows\x64\runner\Release" -Destination "xibe-chat-windows-v${{ inputs.version }}-${{ inputs.build_number }}" -Recurse
          if (Test-Path "build\windows\x64\runner\Release\xibe_chat.msix") {
            Copy-Item -Path "build\windows\x64\runner\Release\xibe_chat.msix" -Destination "xibe-chat-v${{ inputs.version }}-${{ inputs.build_number }}.msix"
          }
        shell: powershell
      
      - name: Upload Windows EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: xibe-chat-windows-v${{ inputs.version }}-${{ inputs.build_number }}
          retention-days: 1
      
      - name: Upload Windows MSIX artifact
        uses: actions/upload-artifact@v4
        if: hashFiles('xibe-chat-v${{ inputs.version }}-${{ inputs.build_number }}.msix') != ''
        with:
          name: windows-msix
          path: xibe-chat-v${{ inputs.version }}-${{ inputs.build_number }}.msix
          retention-days: 1

  create-release:
    needs: [build-android, build-windows]
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Display structure of downloaded files
        run: ls -R artifacts
      
      - name: Create Git Tag
        uses: actions/github-script@v7
        with:
          script: |
            const tag = `v${{ inputs.version }}-${{ inputs.build_number }}`;
            try {
              await github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `refs/tags/${tag}`,
                sha: context.sha
              });
            } catch (error) {
              if (error.status === 422) {
                console.log('Tag already exists');
              } else {
                throw error;
              }
            }
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}-${{ inputs.build_number }}
          name: Xibe Chat v${{ inputs.version }}-${{ inputs.build_number }}
          draft: false
          prerelease: false
          files: |
            artifacts/android-apk/*
            artifacts/windows-exe/*
            artifacts/windows-msix/*
          body: |
            ## Xibe Chat v${{ inputs.version }}-${{ inputs.build_number }}
            
            ### Download
            
            **Android:**
            - Download the APK file to install on your Android device
            
            **Windows:**
            - Download the MSIX file for Windows Store-style installation
            - Or download the EXE folder for portable installation
            
            ### Installation
            
            **Android:**
            1. Download the APK file
            2. Enable "Install from Unknown Sources" in Android settings
            3. Open the APK file to install
            
            **Windows:**
            - For MSIX: Double-click to install (requires self-signed certificate trust)
            - For EXE: Extract the folder and run xibe_chat.exe
            
            ### What's New
            - AI-powered chat interface
            - Multiple conversation threads
            - Dark/Light theme support
            - Markdown message rendering
            - Local chat history with SQLite
            - Web search integration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            android-apk
            windows-exe
            windows-msix
